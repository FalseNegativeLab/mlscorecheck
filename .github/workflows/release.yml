name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Install package
        run: pip install -e .

      - name: Run tests
        run: pytest tests/ -v

      - name: Verify package metadata
        run: |
          python -c "import mlscorecheck; print(f'Version: {mlscorecheck.__version__}')"
          python -c "import mlscorecheck._version; print(f'Internal version: {mlscorecheck._version.__version__}')"

  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: validate-release
    environment: 
      name: ${{ github.event.inputs.test_pypi == 'true' && 'test-pypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/mlscorecheck' || 'https://pypi.org/p/mlscorecheck' }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Verify build
        run: |
          ls -la dist/
          python -m pip install dist/*.whl
          python -c "import mlscorecheck; print('Package installed successfully')"

      - name: Publish to Test PyPI
        if: github.event.inputs.test_pypi == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

      - name: Publish to PyPI
        if: github.event.inputs.test_pypi != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

  create-github-release-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.whl
          generate_release_notes: true
