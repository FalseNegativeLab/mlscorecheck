{
    "solutions": [
        {
            "scores": [
                {
                    "abbreviation": "acc",
                    "name": "accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "error_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "(tn + tp)/(n + p)",
                    "equation": "acc - (tn + tp)/(n + p)",
                    "equation_polynomial": "acc*(n + p) - tn - tp",
                    "function": "accuracy_standardized"
                },
                {
                    "abbreviation": "sens",
                    "name": "sensitivity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "recall",
                        "true_positive_rate",
                        "Recall",
                        "TruePositiveRate"
                    ],
                    "complement": "false_negative_rate",
                    "args": [
                        "tp",
                        "p"
                    ],
                    "expression": "tp/p",
                    "equation": "sens - tp/p",
                    "equation_polynomial": "p*sens - tp",
                    "function": "sensitivity_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*sens",
                            "tn": "acc*n + acc*p - p*sens"
                        },
                        "symbols": {
                            "tp": [
                                "sens",
                                "p"
                            ],
                            "tn": [
                                "p",
                                "n",
                                "sens",
                                "acc"
                            ]
                        }
                    },
                    "non_zero": [],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "acc",
                    "name": "accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "error_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "(tn + tp)/(n + p)",
                    "equation": "acc - (tn + tp)/(n + p)",
                    "equation_polynomial": "acc*(n + p) - tn - tp",
                    "function": "accuracy_standardized"
                },
                {
                    "abbreviation": "spec",
                    "name": "specificity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "selectivity",
                        "Selectivity",
                        "true_negative_rate",
                        "TrueNegativeRate"
                    ],
                    "complement": "false_positive_rate",
                    "args": [
                        "tn",
                        "n"
                    ],
                    "expression": "tn/n",
                    "equation": "spec - tn/n",
                    "equation_polynomial": "n*spec - tn",
                    "function": "specificity_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tn": "n*spec",
                            "tp": "acc*n + acc*p - n*spec"
                        },
                        "symbols": {
                            "tn": [
                                "spec",
                                "n"
                            ],
                            "tp": [
                                "p",
                                "spec",
                                "n",
                                "acc"
                            ]
                        }
                    },
                    "non_zero": [],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "acc",
                    "name": "accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "error_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "(tn + tp)/(n + p)",
                    "equation": "acc - (tn + tp)/(n + p)",
                    "equation_polynomial": "acc*(n + p) - tn - tp",
                    "function": "accuracy_standardized"
                },
                {
                    "abbreviation": "ppv",
                    "name": "positive_predictive_value",
                    "nans": [
                        {
                            "tp": 0,
                            "fp": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "precision",
                        "Precision"
                    ],
                    "complement": "false_discovery_rate",
                    "args": [
                        "tp",
                        "tn",
                        "n"
                    ],
                    "expression": "tp/(n - tn + tp)",
                    "equation": "ppv - tp/(n - tn + tp)",
                    "equation_polynomial": "ppv*(n - tn + tp) - tp",
                    "function": "positive_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "ppv*(acc*n + acc*p - n)/(2*ppv - 1)",
                            "tn": "(acc*n*ppv - acc*n + acc*p*ppv - acc*p + n*ppv)/(2*ppv - 1)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "acc",
                                "n",
                                "ppv"
                            ],
                            "tn": [
                                "p",
                                "ppv",
                                "acc",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "2*ppv - 1",
                            "symbols": [
                                "ppv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "acc",
                    "name": "accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "error_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "(tn + tp)/(n + p)",
                    "equation": "acc - (tn + tp)/(n + p)",
                    "equation_polynomial": "acc*(n + p) - tn - tp",
                    "function": "accuracy_standardized"
                },
                {
                    "abbreviation": "npv",
                    "name": "negative_predictive_value",
                    "nans": [
                        {
                            "tn": 0,
                            "fn": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "false_omission_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p"
                    ],
                    "expression": "tn/(p + tn - tp)",
                    "equation": "npv - tn/(p + tn - tp)",
                    "equation_polynomial": "npv*(p + tn - tp) - tn",
                    "function": "negative_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "(acc*(n + p)*(2*npv - 1) - npv*(acc*n + acc*p - p))/(2*npv - 1)",
                            "tn": "npv*(acc*n + acc*p - p)/(2*npv - 1)"
                        },
                        "symbols": {
                            "tp": [
                                "acc",
                                "p",
                                "n",
                                "npv"
                            ],
                            "tn": [
                                "p",
                                "npv",
                                "acc",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "2*npv - 1",
                            "symbols": [
                                "npv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "acc",
                    "name": "accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "error_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "(tn + tp)/(n + p)",
                    "equation": "acc - (tn + tp)/(n + p)",
                    "equation_polynomial": "acc*(n + p) - tn - tp",
                    "function": "accuracy_standardized"
                },
                {
                    "abbreviation": "ba",
                    "name": "balanced_accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "0.5*tp/p + 0.5*tn/n",
                    "equation": "ba - 0.5*tp/p - 0.5*tn/n",
                    "equation_polynomial": "2*ba*n*p - n*tp - p*tn",
                    "function": "balanced_accuracy_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*(acc*n + acc*p - 2*ba*n)/(-n + p)",
                            "tn": "n*(acc*n + acc*p - 2*ba*p)/(n - p)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "ba",
                                "n",
                                "acc"
                            ],
                            "tn": [
                                "p",
                                "ba",
                                "n",
                                "acc"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "n - p",
                            "symbols": [
                                "n",
                                "p"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "acc",
                    "name": "accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "error_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "(tn + tp)/(n + p)",
                    "equation": "acc - (tn + tp)/(n + p)",
                    "equation_polynomial": "acc*(n + p) - tn - tp",
                    "function": "accuracy_standardized"
                },
                {
                    "abbreviation": "f1p",
                    "name": "f1_plus",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "2*tp/(n + p - tn + tp)",
                    "equation": "f1p - 2*tp/(n + p - tn + tp)",
                    "equation_polynomial": "f1p*(n + p - tn + tp) - 2*tp",
                    "function": "f1_plus_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "f1p*(acc*n + acc*p - n - p)/(2*(f1p - 1))",
                            "tn": "(acc*f1p*n + acc*f1p*p - 2*acc*n - 2*acc*p + f1p*n + f1p*p)/(2*(f1p - 1))"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "f1p",
                                "acc",
                                "n"
                            ],
                            "tn": [
                                "p",
                                "acc",
                                "n",
                                "f1p"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "2*f1p - 2",
                            "symbols": [
                                "f1p"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "sens",
                    "name": "sensitivity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "recall",
                        "true_positive_rate",
                        "Recall",
                        "TruePositiveRate"
                    ],
                    "complement": "false_negative_rate",
                    "args": [
                        "tp",
                        "p"
                    ],
                    "expression": "tp/p",
                    "equation": "sens - tp/p",
                    "equation_polynomial": "p*sens - tp",
                    "function": "sensitivity_standardized"
                },
                {
                    "abbreviation": "spec",
                    "name": "specificity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "selectivity",
                        "Selectivity",
                        "true_negative_rate",
                        "TrueNegativeRate"
                    ],
                    "complement": "false_positive_rate",
                    "args": [
                        "tn",
                        "n"
                    ],
                    "expression": "tn/n",
                    "equation": "spec - tn/n",
                    "equation_polynomial": "n*spec - tn",
                    "function": "specificity_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*sens",
                            "tn": "n*spec"
                        },
                        "symbols": {
                            "tp": [
                                "sens",
                                "p"
                            ],
                            "tn": [
                                "spec",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "sens",
                    "name": "sensitivity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "recall",
                        "true_positive_rate",
                        "Recall",
                        "TruePositiveRate"
                    ],
                    "complement": "false_negative_rate",
                    "args": [
                        "tp",
                        "p"
                    ],
                    "expression": "tp/p",
                    "equation": "sens - tp/p",
                    "equation_polynomial": "p*sens - tp",
                    "function": "sensitivity_standardized"
                },
                {
                    "abbreviation": "ppv",
                    "name": "positive_predictive_value",
                    "nans": [
                        {
                            "tp": 0,
                            "fp": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "precision",
                        "Precision"
                    ],
                    "complement": "false_discovery_rate",
                    "args": [
                        "tp",
                        "tn",
                        "n"
                    ],
                    "expression": "tp/(n - tn + tp)",
                    "equation": "ppv - tp/(n - tn + tp)",
                    "equation_polynomial": "ppv*(n - tn + tp) - tp",
                    "function": "positive_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*sens",
                            "tn": "n + p*sens - p*sens/ppv"
                        },
                        "symbols": {
                            "tp": [
                                "sens",
                                "p"
                            ],
                            "tn": [
                                "p",
                                "n",
                                "sens",
                                "ppv"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "ppv",
                            "symbols": [
                                "ppv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "sens",
                    "name": "sensitivity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "recall",
                        "true_positive_rate",
                        "Recall",
                        "TruePositiveRate"
                    ],
                    "complement": "false_negative_rate",
                    "args": [
                        "tp",
                        "p"
                    ],
                    "expression": "tp/p",
                    "equation": "sens - tp/p",
                    "equation_polynomial": "p*sens - tp",
                    "function": "sensitivity_standardized"
                },
                {
                    "abbreviation": "npv",
                    "name": "negative_predictive_value",
                    "nans": [
                        {
                            "tn": 0,
                            "fn": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "false_omission_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p"
                    ],
                    "expression": "tn/(p + tn - tp)",
                    "equation": "npv - tn/(p + tn - tp)",
                    "equation_polynomial": "npv*(p + tn - tp) - tn",
                    "function": "negative_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*sens",
                            "tn": "npv*p*(sens - 1)/(npv - 1)"
                        },
                        "symbols": {
                            "tp": [
                                "sens",
                                "p"
                            ],
                            "tn": [
                                "p",
                                "npv",
                                "sens"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "npv - 1",
                            "symbols": [
                                "npv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "sens",
                    "name": "sensitivity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "recall",
                        "true_positive_rate",
                        "Recall",
                        "TruePositiveRate"
                    ],
                    "complement": "false_negative_rate",
                    "args": [
                        "tp",
                        "p"
                    ],
                    "expression": "tp/p",
                    "equation": "sens - tp/p",
                    "equation_polynomial": "p*sens - tp",
                    "function": "sensitivity_standardized"
                },
                {
                    "abbreviation": "ba",
                    "name": "balanced_accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "0.5*tp/p + 0.5*tn/n",
                    "equation": "ba - 0.5*tp/p - 0.5*tn/n",
                    "equation_polynomial": "2*ba*n*p - n*tp - p*tn",
                    "function": "balanced_accuracy_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*sens",
                            "tn": "n*(2*ba - sens)"
                        },
                        "symbols": {
                            "tp": [
                                "sens",
                                "p"
                            ],
                            "tn": [
                                "ba",
                                "sens",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "sens",
                    "name": "sensitivity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "recall",
                        "true_positive_rate",
                        "Recall",
                        "TruePositiveRate"
                    ],
                    "complement": "false_negative_rate",
                    "args": [
                        "tp",
                        "p"
                    ],
                    "expression": "tp/p",
                    "equation": "sens - tp/p",
                    "equation_polynomial": "p*sens - tp",
                    "function": "sensitivity_standardized"
                },
                {
                    "abbreviation": "f1p",
                    "name": "f1_plus",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "2*tp/(n + p - tn + tp)",
                    "equation": "f1p - 2*tp/(n + p - tn + tp)",
                    "equation_polynomial": "f1p*(n + p - tn + tp) - 2*tp",
                    "function": "f1_plus_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*sens",
                            "tn": "n + p*sens + p - 2*p*sens/f1p"
                        },
                        "symbols": {
                            "tp": [
                                "sens",
                                "p"
                            ],
                            "tn": [
                                "p",
                                "n",
                                "sens",
                                "f1p"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "f1p",
                            "symbols": [
                                "f1p"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "spec",
                    "name": "specificity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "selectivity",
                        "Selectivity",
                        "true_negative_rate",
                        "TrueNegativeRate"
                    ],
                    "complement": "false_positive_rate",
                    "args": [
                        "tn",
                        "n"
                    ],
                    "expression": "tn/n",
                    "equation": "spec - tn/n",
                    "equation_polynomial": "n*spec - tn",
                    "function": "specificity_standardized"
                },
                {
                    "abbreviation": "ppv",
                    "name": "positive_predictive_value",
                    "nans": [
                        {
                            "tp": 0,
                            "fp": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "precision",
                        "Precision"
                    ],
                    "complement": "false_discovery_rate",
                    "args": [
                        "tp",
                        "tn",
                        "n"
                    ],
                    "expression": "tp/(n - tn + tp)",
                    "equation": "ppv - tp/(n - tn + tp)",
                    "equation_polynomial": "ppv*(n - tn + tp) - tp",
                    "function": "positive_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tn": "n*spec",
                            "tp": "n*ppv*(spec - 1)/(ppv - 1)"
                        },
                        "symbols": {
                            "tn": [
                                "spec",
                                "n"
                            ],
                            "tp": [
                                "spec",
                                "n",
                                "ppv"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "ppv - 1",
                            "symbols": [
                                "ppv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "spec",
                    "name": "specificity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "selectivity",
                        "Selectivity",
                        "true_negative_rate",
                        "TrueNegativeRate"
                    ],
                    "complement": "false_positive_rate",
                    "args": [
                        "tn",
                        "n"
                    ],
                    "expression": "tn/n",
                    "equation": "spec - tn/n",
                    "equation_polynomial": "n*spec - tn",
                    "function": "specificity_standardized"
                },
                {
                    "abbreviation": "npv",
                    "name": "negative_predictive_value",
                    "nans": [
                        {
                            "tn": 0,
                            "fn": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "false_omission_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p"
                    ],
                    "expression": "tn/(p + tn - tp)",
                    "equation": "npv - tn/(p + tn - tp)",
                    "equation_polynomial": "npv*(p + tn - tp) - tn",
                    "function": "negative_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tn": "n*spec",
                            "tp": "n*spec - n*spec/npv + p"
                        },
                        "symbols": {
                            "tn": [
                                "spec",
                                "n"
                            ],
                            "tp": [
                                "p",
                                "spec",
                                "n",
                                "npv"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "npv",
                            "symbols": [
                                "npv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "spec",
                    "name": "specificity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "selectivity",
                        "Selectivity",
                        "true_negative_rate",
                        "TrueNegativeRate"
                    ],
                    "complement": "false_positive_rate",
                    "args": [
                        "tn",
                        "n"
                    ],
                    "expression": "tn/n",
                    "equation": "spec - tn/n",
                    "equation_polynomial": "n*spec - tn",
                    "function": "specificity_standardized"
                },
                {
                    "abbreviation": "ba",
                    "name": "balanced_accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "0.5*tp/p + 0.5*tn/n",
                    "equation": "ba - 0.5*tp/p - 0.5*tn/n",
                    "equation_polynomial": "2*ba*n*p - n*tp - p*tn",
                    "function": "balanced_accuracy_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tn": "n*spec",
                            "tp": "p*(2*ba - spec)"
                        },
                        "symbols": {
                            "tn": [
                                "spec",
                                "n"
                            ],
                            "tp": [
                                "ba",
                                "p",
                                "spec"
                            ]
                        }
                    },
                    "non_zero": [],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "spec",
                    "name": "specificity",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "selectivity",
                        "Selectivity",
                        "true_negative_rate",
                        "TrueNegativeRate"
                    ],
                    "complement": "false_positive_rate",
                    "args": [
                        "tn",
                        "n"
                    ],
                    "expression": "tn/n",
                    "equation": "spec - tn/n",
                    "equation_polynomial": "n*spec - tn",
                    "function": "specificity_standardized"
                },
                {
                    "abbreviation": "f1p",
                    "name": "f1_plus",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "2*tp/(n + p - tn + tp)",
                    "equation": "f1p - 2*tp/(n + p - tn + tp)",
                    "equation_polynomial": "f1p*(n + p - tn + tp) - 2*tp",
                    "function": "f1_plus_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tn": "n*spec",
                            "tp": "f1p*(n*spec - n - p)/(f1p - 2)"
                        },
                        "symbols": {
                            "tn": [
                                "spec",
                                "n"
                            ],
                            "tp": [
                                "p",
                                "f1p",
                                "spec",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "f1p - 2",
                            "symbols": [
                                "f1p"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "ppv",
                    "name": "positive_predictive_value",
                    "nans": [
                        {
                            "tp": 0,
                            "fp": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "precision",
                        "Precision"
                    ],
                    "complement": "false_discovery_rate",
                    "args": [
                        "tp",
                        "tn",
                        "n"
                    ],
                    "expression": "tp/(n - tn + tp)",
                    "equation": "ppv - tp/(n - tn + tp)",
                    "equation_polynomial": "ppv*(n - tn + tp) - tp",
                    "function": "positive_predictive_value_standardized"
                },
                {
                    "abbreviation": "npv",
                    "name": "negative_predictive_value",
                    "nans": [
                        {
                            "tn": 0,
                            "fn": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "false_omission_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p"
                    ],
                    "expression": "tn/(p + tn - tp)",
                    "equation": "npv - tn/(p + tn - tp)",
                    "equation_polynomial": "npv*(p + tn - tp) - tn",
                    "function": "negative_predictive_value_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "ppv*(n*npv - n + npv*p)/(npv + ppv - 1)",
                            "tn": "npv*(n*ppv + p*ppv - p)/(npv + ppv - 1)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "ppv",
                                "npv",
                                "n"
                            ],
                            "tn": [
                                "p",
                                "ppv",
                                "npv",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "npv + ppv - 1",
                            "symbols": [
                                "npv",
                                "ppv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "ppv",
                    "name": "positive_predictive_value",
                    "nans": [
                        {
                            "tp": 0,
                            "fp": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "precision",
                        "Precision"
                    ],
                    "complement": "false_discovery_rate",
                    "args": [
                        "tp",
                        "tn",
                        "n"
                    ],
                    "expression": "tp/(n - tn + tp)",
                    "equation": "ppv - tp/(n - tn + tp)",
                    "equation_polynomial": "ppv*(n - tn + tp) - tp",
                    "function": "positive_predictive_value_standardized"
                },
                {
                    "abbreviation": "ba",
                    "name": "balanced_accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "0.5*tp/p + 0.5*tn/n",
                    "equation": "ba - 0.5*tp/p - 0.5*tn/n",
                    "equation_polynomial": "2*ba*n*p - n*tp - p*tn",
                    "function": "balanced_accuracy_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "n*p*ppv*(2*ba - 1)/(n*ppv + p*ppv - p)",
                            "tn": "n*(2*ba*p*ppv - 2*ba*p + n*ppv)/(n*ppv + p*ppv - p)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "ba",
                                "n",
                                "ppv"
                            ],
                            "tn": [
                                "p",
                                "ba",
                                "ppv",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "n*ppv + p*ppv - p",
                            "symbols": [
                                "n",
                                "p",
                                "ppv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "ppv",
                    "name": "positive_predictive_value",
                    "nans": [
                        {
                            "tp": 0,
                            "fp": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": [
                        "precision",
                        "Precision"
                    ],
                    "complement": "false_discovery_rate",
                    "args": [
                        "tp",
                        "tn",
                        "n"
                    ],
                    "expression": "tp/(n - tn + tp)",
                    "equation": "ppv - tp/(n - tn + tp)",
                    "equation_polynomial": "ppv*(n - tn + tp) - tp",
                    "function": "positive_predictive_value_standardized"
                },
                {
                    "abbreviation": "f1p",
                    "name": "f1_plus",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "2*tp/(n + p - tn + tp)",
                    "equation": "f1p - 2*tp/(n + p - tn + tp)",
                    "equation_polynomial": "f1p*(n + p - tn + tp) - 2*tp",
                    "function": "f1_plus_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "-f1p*p*ppv/(f1p - 2*ppv)",
                            "tn": "(f1p*n - f1p*p*ppv + f1p*p - 2*n*ppv)/(f1p - 2*ppv)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "ppv",
                                "f1p"
                            ],
                            "tn": [
                                "p",
                                "ppv",
                                "f1p",
                                "n"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "f1p - 2*ppv",
                            "symbols": [
                                "f1p",
                                "ppv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "npv",
                    "name": "negative_predictive_value",
                    "nans": [
                        {
                            "tn": 0,
                            "fn": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "false_omission_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p"
                    ],
                    "expression": "tn/(p + tn - tp)",
                    "equation": "npv - tn/(p + tn - tp)",
                    "equation_polynomial": "npv*(p + tn - tp) - tn",
                    "function": "negative_predictive_value_standardized"
                },
                {
                    "abbreviation": "ba",
                    "name": "balanced_accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "0.5*tp/p + 0.5*tn/n",
                    "equation": "ba - 0.5*tp/p - 0.5*tn/n",
                    "equation_polynomial": "2*ba*n*p - n*tp - p*tn",
                    "function": "balanced_accuracy_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "p*(2*ba*n*npv - 2*ba*n + npv*p)/(n*npv - n + npv*p)",
                            "tn": "n*npv*p*(2*ba - 1)/(n*npv - n + npv*p)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "ba",
                                "n",
                                "npv"
                            ],
                            "tn": [
                                "p",
                                "ba",
                                "n",
                                "npv"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "n*npv - n + npv*p",
                            "symbols": [
                                "n",
                                "npv",
                                "p"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "npv",
                    "name": "negative_predictive_value",
                    "nans": [
                        {
                            "tn": 0,
                            "fn": 0
                        }
                    ],
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": "false_omission_rate",
                    "args": [
                        "tp",
                        "tn",
                        "p"
                    ],
                    "expression": "tn/(p + tn - tp)",
                    "equation": "npv - tn/(p + tn - tp)",
                    "equation_polynomial": "npv*(p + tn - tp) - tn",
                    "function": "negative_predictive_value_standardized"
                },
                {
                    "abbreviation": "f1p",
                    "name": "f1_plus",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "2*tp/(n + p - tn + tp)",
                    "equation": "f1p - 2*tp/(n + p - tn + tp)",
                    "equation_polynomial": "f1p*(n + p - tn + tp) - 2*tp",
                    "function": "f1_plus_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "f1p*(n*npv - n + 2*npv*p - p)/(f1p + 2*npv - 2)",
                            "tn": "npv*(f1p*n + 2*f1p*p - 2*p)/(f1p + 2*npv - 2)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "f1p",
                                "n",
                                "npv"
                            ],
                            "tn": [
                                "p",
                                "f1p",
                                "n",
                                "npv"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "f1p + 2*npv - 2",
                            "symbols": [
                                "f1p",
                                "npv"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        },
        {
            "scores": [
                {
                    "abbreviation": "ba",
                    "name": "balanced_accuracy",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "0.5*tp/p + 0.5*tn/n",
                    "equation": "ba - 0.5*tp/p - 0.5*tn/n",
                    "equation_polynomial": "2*ba*n*p - n*tp - p*tn",
                    "function": "balanced_accuracy_standardized"
                },
                {
                    "abbreviation": "f1p",
                    "name": "f1_plus",
                    "nans": null,
                    "range_": [
                        0,
                        1
                    ],
                    "synonyms": null,
                    "complement": null,
                    "args": [
                        "tp",
                        "tn",
                        "p",
                        "n"
                    ],
                    "expression": "2*tp/(n + p - tn + tp)",
                    "equation": "f1p - 2*tp/(n + p - tn + tp)",
                    "equation_polynomial": "f1p*(n + p - tn + tp) - 2*tp",
                    "function": "f1_plus_standardized"
                }
            ],
            "solutions": [
                {
                    "solution": {
                        "expressions": {
                            "tp": "f1p*p*(2*ba*n - n - p)/(f1p*n + f1p*p - 2*p)",
                            "tn": "n*(2*ba*f1p*p - 4*ba*p + f1p*n + f1p*p)/(f1p*n + f1p*p - 2*p)"
                        },
                        "symbols": {
                            "tp": [
                                "p",
                                "ba",
                                "n",
                                "f1p"
                            ],
                            "tn": [
                                "p",
                                "ba",
                                "n",
                                "f1p"
                            ]
                        }
                    },
                    "non_zero": [
                        {
                            "expression": "f1p*n + f1p*p - 2*p",
                            "symbols": [
                                "n",
                                "p",
                                "f1p"
                            ]
                        }
                    ],
                    "non_negative": []
                }
            ]
        }
    ]
}