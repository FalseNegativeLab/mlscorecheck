{"solutions": [{"scores": [{"descriptor": {"name": "accuracy", "abbreviation": "acc", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "err", "args": ["tp", "tn", "p", "n"], "formula": "(tp + tn)/(p + n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(tp + tn)/(p + n)"}, "expression": "(tn + tp)/(n + p)", "equation": "acc - (tn + tp)/(n + p)", "equation_polynomial": "acc*n + acc*p - tn - tp", "function": "accuracy_standardized"}, {"descriptor": {"name": "sensitivity", "abbreviation": "sens", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fnr", "args": ["tp", "p"], "formula": "tp/p", "args_standardized": ["tp", "p"], "formula_standardized": "tp/p", "synonyms": ["recall", "true_positive_rate"]}, "expression": "tp/p", "equation": "sens - tp/p", "equation_polynomial": "p*sens - tp", "function": "sensitivity_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "p*sens", "tn": "acc*n + acc*p - p*sens"}, "symbols": {"tp": ["p", "sens"], "tn": ["acc", "n", "p", "sens"]}}, "non_zero": [], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "accuracy", "abbreviation": "acc", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "err", "args": ["tp", "tn", "p", "n"], "formula": "(tp + tn)/(p + n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(tp + tn)/(p + n)"}, "expression": "(tn + tp)/(n + p)", "equation": "acc - (tn + tp)/(n + p)", "equation_polynomial": "acc*n + acc*p - tn - tp", "function": "accuracy_standardized"}, {"descriptor": {"name": "specificity", "abbreviation": "spec", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fpr", "args": ["tn", "n"], "formula": "tn/n", "args_standardized": ["tn", "n"], "formula_standardized": "tn/n", "synonyms": ["selectivity", "true_negative_rate"]}, "expression": "tn/n", "equation": "spec - tn/n", "equation_polynomial": "n*spec - tn", "function": "specificity_standardized"}], "solutions": [{"solution": {"expressions": {"tn": "n*spec", "tp": "acc*n + acc*p - n*spec"}, "symbols": {"tn": ["n", "spec"], "tp": ["acc", "n", "p", "spec"]}}, "non_zero": [], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "accuracy", "abbreviation": "acc", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "err", "args": ["tp", "tn", "p", "n"], "formula": "(tp + tn)/(p + n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(tp + tn)/(p + n)"}, "expression": "(tn + tp)/(n + p)", "equation": "acc - (tn + tp)/(n + p)", "equation_polynomial": "acc*n + acc*p - tn - tp", "function": "accuracy_standardized"}, {"descriptor": {"name": "positive_predictive_value", "abbreviation": "ppv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tp": 0, "fp": 0}], "complement": "fdr", "args": ["tp", "fp"], "formula": "tp/(tp + fp)", "args_standardized": ["tp", "tn", "n"], "formula_standardized": "tp/(tp + n - tn)", "synonyms": ["precision"]}, "expression": "tp/(n - tn + tp)", "equation": "ppv - tp/(n - tn + tp)", "equation_polynomial": "n*ppv - ppv*tn + ppv*tp - tp", "function": "positive_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(acc*n + acc*p - n)*ppv/(2*ppv - 1)", "tn": "(acc*n*ppv + acc*p*ppv - acc*n - acc*p + n*ppv)/(2*ppv - 1)"}, "symbols": {"tp": ["acc", "n", "p", "ppv"], "tn": ["acc", "n", "p", "ppv"]}}, "non_zero": [{"expression": "2*ppv - 1", "symbols": ["ppv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "accuracy", "abbreviation": "acc", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "err", "args": ["tp", "tn", "p", "n"], "formula": "(tp + tn)/(p + n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(tp + tn)/(p + n)"}, "expression": "(tn + tp)/(n + p)", "equation": "acc - (tn + tp)/(n + p)", "equation_polynomial": "acc*n + acc*p - tn - tp", "function": "accuracy_standardized"}, {"descriptor": {"name": "negative_predictive_value", "abbreviation": "npv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tn": 0, "fn": 0}], "complement": "for_", "args": ["tn", "fn"], "formula": "tn/(tn + fn)", "args_standardized": ["tp", "tn", "p"], "formula_standardized": "tn/(tn + p - tp)"}, "expression": "tn/(p + tn - tp)", "equation": "npv - tn/(p + tn - tp)", "equation_polynomial": "npv*p + npv*tn - npv*tp - tn", "function": "negative_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(acc*n*npv + acc*npv*p - acc*n - acc*p + npv*p)/(2*npv - 1)", "tn": "(acc*n + acc*p - p)*npv/(2*npv - 1)"}, "symbols": {"tp": ["acc", "n", "npv", "p"], "tn": ["acc", "n", "npv", "p"]}}, "non_zero": [{"expression": "2*npv - 1", "symbols": ["npv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "accuracy", "abbreviation": "acc", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "err", "args": ["tp", "tn", "p", "n"], "formula": "(tp + tn)/(p + n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(tp + tn)/(p + n)"}, "expression": "(tn + tp)/(n + p)", "equation": "acc - (tn + tp)/(n + p)", "equation_polynomial": "acc*n + acc*p - tn - tp", "function": "accuracy_standardized"}, {"descriptor": {"name": "balanced_accuracy", "abbreviation": "bacc", "lower_bound": 0, "upper_bound": 1, "short_args": ["tpr", "tnr"], "short_formula": "(tpr + tnr)/2", "args": ["tp", "tn", "p", "n"], "formula": "tp/(2*p) + tn/(2*n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "tp/(2*p) + tn/(2*n)"}, "expression": "1/2*tn/n + 1/2*tp/p", "equation": "bacc - 1/2*tn/n - 1/2*tp/p", "equation_polynomial": "2*bacc*n*p - p*tn - n*tp", "function": "balanced_accuracy_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "-(acc*n - 2*bacc*n + acc*p)*p/(n - p)", "tn": "(acc*n + acc*p - 2*bacc*p)*n/(n - p)"}, "symbols": {"tp": ["acc", "bacc", "n", "p"], "tn": ["acc", "bacc", "n", "p"]}}, "non_zero": [{"expression": "n - p", "symbols": ["n", "p"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "accuracy", "abbreviation": "acc", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "err", "args": ["tp", "tn", "p", "n"], "formula": "(tp + tn)/(p + n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(tp + tn)/(p + n)"}, "expression": "(tn + tp)/(n + p)", "equation": "acc - (tn + tp)/(n + p)", "equation_polynomial": "acc*n + acc*p - tn - tp", "function": "accuracy_standardized"}, {"descriptor": {"name": "f1_plus", "abbreviation": "f1p", "lower_bound": 0, "upper_bound": null, "args": ["tp", "fp", "p"], "formula": "(2*tp) / (tp + p + fp)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(2*tp) / (tp + p + n - tn)", "synonyms": ["f1"]}, "expression": "2*tp/(n + p - tn + tp)", "equation": "f1p - 2*tp/(n + p - tn + tp)", "equation_polynomial": "f1p*n + f1p*p - f1p*tn + f1p*tp - 2*tp", "function": "f1_plus_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "1/2*(acc - 1)*f1p*(n + p)/(f1p - 1)", "tn": "1/2*(acc*f1p - 2*acc + f1p)*(n + p)/(f1p - 1)"}, "symbols": {"tp": ["acc", "f1p", "n", "p"], "tn": ["acc", "f1p", "n", "p"]}}, "non_zero": [{"expression": "2*f1p - 2", "symbols": ["f1p"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "sensitivity", "abbreviation": "sens", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fnr", "args": ["tp", "p"], "formula": "tp/p", "args_standardized": ["tp", "p"], "formula_standardized": "tp/p", "synonyms": ["recall", "true_positive_rate"]}, "expression": "tp/p", "equation": "sens - tp/p", "equation_polynomial": "p*sens - tp", "function": "sensitivity_standardized"}, {"descriptor": {"name": "specificity", "abbreviation": "spec", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fpr", "args": ["tn", "n"], "formula": "tn/n", "args_standardized": ["tn", "n"], "formula_standardized": "tn/n", "synonyms": ["selectivity", "true_negative_rate"]}, "expression": "tn/n", "equation": "spec - tn/n", "equation_polynomial": "n*spec - tn", "function": "specificity_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "p*sens", "tn": "n*spec"}, "symbols": {"tp": ["p", "sens"], "tn": ["n", "spec"]}}, "non_zero": [], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "sensitivity", "abbreviation": "sens", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fnr", "args": ["tp", "p"], "formula": "tp/p", "args_standardized": ["tp", "p"], "formula_standardized": "tp/p", "synonyms": ["recall", "true_positive_rate"]}, "expression": "tp/p", "equation": "sens - tp/p", "equation_polynomial": "p*sens - tp", "function": "sensitivity_standardized"}, {"descriptor": {"name": "positive_predictive_value", "abbreviation": "ppv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tp": 0, "fp": 0}], "complement": "fdr", "args": ["tp", "fp"], "formula": "tp/(tp + fp)", "args_standardized": ["tp", "tn", "n"], "formula_standardized": "tp/(tp + n - tn)", "synonyms": ["precision"]}, "expression": "tp/(n - tn + tp)", "equation": "ppv - tp/(n - tn + tp)", "equation_polynomial": "n*ppv - ppv*tn + ppv*tp - tp", "function": "positive_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "p*sens", "tn": "(p*ppv*sens + n*ppv - p*sens)/ppv"}, "symbols": {"tp": ["p", "sens"], "tn": ["n", "p", "ppv", "sens"]}}, "non_zero": [{"expression": "ppv", "symbols": ["ppv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "sensitivity", "abbreviation": "sens", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fnr", "args": ["tp", "p"], "formula": "tp/p", "args_standardized": ["tp", "p"], "formula_standardized": "tp/p", "synonyms": ["recall", "true_positive_rate"]}, "expression": "tp/p", "equation": "sens - tp/p", "equation_polynomial": "p*sens - tp", "function": "sensitivity_standardized"}, {"descriptor": {"name": "negative_predictive_value", "abbreviation": "npv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tn": 0, "fn": 0}], "complement": "for_", "args": ["tn", "fn"], "formula": "tn/(tn + fn)", "args_standardized": ["tp", "tn", "p"], "formula_standardized": "tn/(tn + p - tp)"}, "expression": "tn/(p + tn - tp)", "equation": "npv - tn/(p + tn - tp)", "equation_polynomial": "npv*p + npv*tn - npv*tp - tn", "function": "negative_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "p*sens", "tn": "npv*p*(sens - 1)/(npv - 1)"}, "symbols": {"tp": ["p", "sens"], "tn": ["npv", "p", "sens"]}}, "non_zero": [{"expression": "npv - 1", "symbols": ["npv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "sensitivity", "abbreviation": "sens", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fnr", "args": ["tp", "p"], "formula": "tp/p", "args_standardized": ["tp", "p"], "formula_standardized": "tp/p", "synonyms": ["recall", "true_positive_rate"]}, "expression": "tp/p", "equation": "sens - tp/p", "equation_polynomial": "p*sens - tp", "function": "sensitivity_standardized"}, {"descriptor": {"name": "balanced_accuracy", "abbreviation": "bacc", "lower_bound": 0, "upper_bound": 1, "short_args": ["tpr", "tnr"], "short_formula": "(tpr + tnr)/2", "args": ["tp", "tn", "p", "n"], "formula": "tp/(2*p) + tn/(2*n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "tp/(2*p) + tn/(2*n)"}, "expression": "1/2*tn/n + 1/2*tp/p", "equation": "bacc - 1/2*tn/n - 1/2*tp/p", "equation_polynomial": "2*bacc*n*p - p*tn - n*tp", "function": "balanced_accuracy_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "p*sens", "tn": "(2*bacc - sens)*n"}, "symbols": {"tp": ["p", "sens"], "tn": ["bacc", "n", "sens"]}}, "non_zero": [], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "sensitivity", "abbreviation": "sens", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fnr", "args": ["tp", "p"], "formula": "tp/p", "args_standardized": ["tp", "p"], "formula_standardized": "tp/p", "synonyms": ["recall", "true_positive_rate"]}, "expression": "tp/p", "equation": "sens - tp/p", "equation_polynomial": "p*sens - tp", "function": "sensitivity_standardized"}, {"descriptor": {"name": "f1_plus", "abbreviation": "f1p", "lower_bound": 0, "upper_bound": null, "args": ["tp", "fp", "p"], "formula": "(2*tp) / (tp + p + fp)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(2*tp) / (tp + p + n - tn)", "synonyms": ["f1"]}, "expression": "2*tp/(n + p - tn + tp)", "equation": "f1p - 2*tp/(n + p - tn + tp)", "equation_polynomial": "f1p*n + f1p*p - f1p*tn + f1p*tp - 2*tp", "function": "f1_plus_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "p*sens", "tn": "(f1p*p*sens + f1p*n + f1p*p - 2*p*sens)/f1p"}, "symbols": {"tp": ["p", "sens"], "tn": ["f1p", "n", "p", "sens"]}}, "non_zero": [{"expression": "f1p", "symbols": ["f1p"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "specificity", "abbreviation": "spec", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fpr", "args": ["tn", "n"], "formula": "tn/n", "args_standardized": ["tn", "n"], "formula_standardized": "tn/n", "synonyms": ["selectivity", "true_negative_rate"]}, "expression": "tn/n", "equation": "spec - tn/n", "equation_polynomial": "n*spec - tn", "function": "specificity_standardized"}, {"descriptor": {"name": "positive_predictive_value", "abbreviation": "ppv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tp": 0, "fp": 0}], "complement": "fdr", "args": ["tp", "fp"], "formula": "tp/(tp + fp)", "args_standardized": ["tp", "tn", "n"], "formula_standardized": "tp/(tp + n - tn)", "synonyms": ["precision"]}, "expression": "tp/(n - tn + tp)", "equation": "ppv - tp/(n - tn + tp)", "equation_polynomial": "n*ppv - ppv*tn + ppv*tp - tp", "function": "positive_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tn": "n*spec", "tp": "n*ppv*(spec - 1)/(ppv - 1)"}, "symbols": {"tn": ["n", "spec"], "tp": ["n", "ppv", "spec"]}}, "non_zero": [{"expression": "ppv - 1", "symbols": ["ppv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "specificity", "abbreviation": "spec", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fpr", "args": ["tn", "n"], "formula": "tn/n", "args_standardized": ["tn", "n"], "formula_standardized": "tn/n", "synonyms": ["selectivity", "true_negative_rate"]}, "expression": "tn/n", "equation": "spec - tn/n", "equation_polynomial": "n*spec - tn", "function": "specificity_standardized"}, {"descriptor": {"name": "negative_predictive_value", "abbreviation": "npv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tn": 0, "fn": 0}], "complement": "for_", "args": ["tn", "fn"], "formula": "tn/(tn + fn)", "args_standardized": ["tp", "tn", "p"], "formula_standardized": "tn/(tn + p - tp)"}, "expression": "tn/(p + tn - tp)", "equation": "npv - tn/(p + tn - tp)", "equation_polynomial": "npv*p + npv*tn - npv*tp - tn", "function": "negative_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tn": "n*spec", "tp": "(n*npv*spec + npv*p - n*spec)/npv"}, "symbols": {"tn": ["n", "spec"], "tp": ["n", "npv", "p", "spec"]}}, "non_zero": [{"expression": "npv", "symbols": ["npv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "specificity", "abbreviation": "spec", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fpr", "args": ["tn", "n"], "formula": "tn/n", "args_standardized": ["tn", "n"], "formula_standardized": "tn/n", "synonyms": ["selectivity", "true_negative_rate"]}, "expression": "tn/n", "equation": "spec - tn/n", "equation_polynomial": "n*spec - tn", "function": "specificity_standardized"}, {"descriptor": {"name": "balanced_accuracy", "abbreviation": "bacc", "lower_bound": 0, "upper_bound": 1, "short_args": ["tpr", "tnr"], "short_formula": "(tpr + tnr)/2", "args": ["tp", "tn", "p", "n"], "formula": "tp/(2*p) + tn/(2*n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "tp/(2*p) + tn/(2*n)"}, "expression": "1/2*tn/n + 1/2*tp/p", "equation": "bacc - 1/2*tn/n - 1/2*tp/p", "equation_polynomial": "2*bacc*n*p - p*tn - n*tp", "function": "balanced_accuracy_standardized"}], "solutions": [{"solution": {"expressions": {"tn": "n*spec", "tp": "(2*bacc - spec)*p"}, "symbols": {"tn": ["n", "spec"], "tp": ["bacc", "p", "spec"]}}, "non_zero": [], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "specificity", "abbreviation": "spec", "lower_bound": 0, "upper_bound": 1, "nans": null, "complement": "fpr", "args": ["tn", "n"], "formula": "tn/n", "args_standardized": ["tn", "n"], "formula_standardized": "tn/n", "synonyms": ["selectivity", "true_negative_rate"]}, "expression": "tn/n", "equation": "spec - tn/n", "equation_polynomial": "n*spec - tn", "function": "specificity_standardized"}, {"descriptor": {"name": "f1_plus", "abbreviation": "f1p", "lower_bound": 0, "upper_bound": null, "args": ["tp", "fp", "p"], "formula": "(2*tp) / (tp + p + fp)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(2*tp) / (tp + p + n - tn)", "synonyms": ["f1"]}, "expression": "2*tp/(n + p - tn + tp)", "equation": "f1p - 2*tp/(n + p - tn + tp)", "equation_polynomial": "f1p*n + f1p*p - f1p*tn + f1p*tp - 2*tp", "function": "f1_plus_standardized"}], "solutions": [{"solution": {"expressions": {"tn": "n*spec", "tp": "(n*spec - n - p)*f1p/(f1p - 2)"}, "symbols": {"tn": ["n", "spec"], "tp": ["f1p", "n", "p", "spec"]}}, "non_zero": [{"expression": "f1p - 2", "symbols": ["f1p"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "positive_predictive_value", "abbreviation": "ppv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tp": 0, "fp": 0}], "complement": "fdr", "args": ["tp", "fp"], "formula": "tp/(tp + fp)", "args_standardized": ["tp", "tn", "n"], "formula_standardized": "tp/(tp + n - tn)", "synonyms": ["precision"]}, "expression": "tp/(n - tn + tp)", "equation": "ppv - tp/(n - tn + tp)", "equation_polynomial": "n*ppv - ppv*tn + ppv*tp - tp", "function": "positive_predictive_value_standardized"}, {"descriptor": {"name": "negative_predictive_value", "abbreviation": "npv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tn": 0, "fn": 0}], "complement": "for_", "args": ["tn", "fn"], "formula": "tn/(tn + fn)", "args_standardized": ["tp", "tn", "p"], "formula_standardized": "tn/(tn + p - tp)"}, "expression": "tn/(p + tn - tp)", "equation": "npv - tn/(p + tn - tp)", "equation_polynomial": "npv*p + npv*tn - npv*tp - tn", "function": "negative_predictive_value_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(n*npv + npv*p - n)*ppv/(npv + ppv - 1)", "tn": "(n*ppv + p*ppv - p)*npv/(npv + ppv - 1)"}, "symbols": {"tp": ["n", "npv", "p", "ppv"], "tn": ["n", "npv", "p", "ppv"]}}, "non_zero": [{"expression": "npv + ppv - 1", "symbols": ["npv", "ppv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "positive_predictive_value", "abbreviation": "ppv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tp": 0, "fp": 0}], "complement": "fdr", "args": ["tp", "fp"], "formula": "tp/(tp + fp)", "args_standardized": ["tp", "tn", "n"], "formula_standardized": "tp/(tp + n - tn)", "synonyms": ["precision"]}, "expression": "tp/(n - tn + tp)", "equation": "ppv - tp/(n - tn + tp)", "equation_polynomial": "n*ppv - ppv*tn + ppv*tp - tp", "function": "positive_predictive_value_standardized"}, {"descriptor": {"name": "balanced_accuracy", "abbreviation": "bacc", "lower_bound": 0, "upper_bound": 1, "short_args": ["tpr", "tnr"], "short_formula": "(tpr + tnr)/2", "args": ["tp", "tn", "p", "n"], "formula": "tp/(2*p) + tn/(2*n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "tp/(2*p) + tn/(2*n)"}, "expression": "1/2*tn/n + 1/2*tp/p", "equation": "bacc - 1/2*tn/n - 1/2*tp/p", "equation_polynomial": "2*bacc*n*p - p*tn - n*tp", "function": "balanced_accuracy_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(2*bacc - 1)*n*p*ppv/(n*ppv + p*ppv - p)", "tn": "(2*bacc*p*ppv - 2*bacc*p + n*ppv)*n/(n*ppv + p*ppv - p)"}, "symbols": {"tp": ["bacc", "n", "p", "ppv"], "tn": ["bacc", "n", "p", "ppv"]}}, "non_zero": [{"expression": "n*ppv + p*ppv - p", "symbols": ["n", "p", "ppv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "positive_predictive_value", "abbreviation": "ppv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tp": 0, "fp": 0}], "complement": "fdr", "args": ["tp", "fp"], "formula": "tp/(tp + fp)", "args_standardized": ["tp", "tn", "n"], "formula_standardized": "tp/(tp + n - tn)", "synonyms": ["precision"]}, "expression": "tp/(n - tn + tp)", "equation": "ppv - tp/(n - tn + tp)", "equation_polynomial": "n*ppv - ppv*tn + ppv*tp - tp", "function": "positive_predictive_value_standardized"}, {"descriptor": {"name": "f1_plus", "abbreviation": "f1p", "lower_bound": 0, "upper_bound": null, "args": ["tp", "fp", "p"], "formula": "(2*tp) / (tp + p + fp)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(2*tp) / (tp + p + n - tn)", "synonyms": ["f1"]}, "expression": "2*tp/(n + p - tn + tp)", "equation": "f1p - 2*tp/(n + p - tn + tp)", "equation_polynomial": "f1p*n + f1p*p - f1p*tn + f1p*tp - 2*tp", "function": "f1_plus_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "-f1p*p*ppv/(f1p - 2*ppv)", "tn": "-(f1p*p*ppv - f1p*n - f1p*p + 2*n*ppv)/(f1p - 2*ppv)"}, "symbols": {"tp": ["f1p", "p", "ppv"], "tn": ["f1p", "n", "p", "ppv"]}}, "non_zero": [{"expression": "f1p - 2*ppv", "symbols": ["f1p", "ppv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "negative_predictive_value", "abbreviation": "npv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tn": 0, "fn": 0}], "complement": "for_", "args": ["tn", "fn"], "formula": "tn/(tn + fn)", "args_standardized": ["tp", "tn", "p"], "formula_standardized": "tn/(tn + p - tp)"}, "expression": "tn/(p + tn - tp)", "equation": "npv - tn/(p + tn - tp)", "equation_polynomial": "npv*p + npv*tn - npv*tp - tn", "function": "negative_predictive_value_standardized"}, {"descriptor": {"name": "balanced_accuracy", "abbreviation": "bacc", "lower_bound": 0, "upper_bound": 1, "short_args": ["tpr", "tnr"], "short_formula": "(tpr + tnr)/2", "args": ["tp", "tn", "p", "n"], "formula": "tp/(2*p) + tn/(2*n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "tp/(2*p) + tn/(2*n)"}, "expression": "1/2*tn/n + 1/2*tp/p", "equation": "bacc - 1/2*tn/n - 1/2*tp/p", "equation_polynomial": "2*bacc*n*p - p*tn - n*tp", "function": "balanced_accuracy_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(2*bacc*n*npv - 2*bacc*n + npv*p)*p/(n*npv + npv*p - n)", "tn": "(2*bacc - 1)*n*npv*p/(n*npv + npv*p - n)"}, "symbols": {"tp": ["bacc", "n", "npv", "p"], "tn": ["bacc", "n", "npv", "p"]}}, "non_zero": [{"expression": "n*npv + npv*p - n", "symbols": ["n", "npv", "p"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "negative_predictive_value", "abbreviation": "npv", "lower_bound": 0, "upper_bound": 1, "nans": [{"tn": 0, "fn": 0}], "complement": "for_", "args": ["tn", "fn"], "formula": "tn/(tn + fn)", "args_standardized": ["tp", "tn", "p"], "formula_standardized": "tn/(tn + p - tp)"}, "expression": "tn/(p + tn - tp)", "equation": "npv - tn/(p + tn - tp)", "equation_polynomial": "npv*p + npv*tn - npv*tp - tn", "function": "negative_predictive_value_standardized"}, {"descriptor": {"name": "f1_plus", "abbreviation": "f1p", "lower_bound": 0, "upper_bound": null, "args": ["tp", "fp", "p"], "formula": "(2*tp) / (tp + p + fp)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(2*tp) / (tp + p + n - tn)", "synonyms": ["f1"]}, "expression": "2*tp/(n + p - tn + tp)", "equation": "f1p - 2*tp/(n + p - tn + tp)", "equation_polynomial": "f1p*n + f1p*p - f1p*tn + f1p*tp - 2*tp", "function": "f1_plus_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(n*npv + 2*npv*p - n - p)*f1p/(f1p + 2*npv - 2)", "tn": "(f1p*n + 2*f1p*p - 2*p)*npv/(f1p + 2*npv - 2)"}, "symbols": {"tp": ["f1p", "n", "npv", "p"], "tn": ["f1p", "n", "npv", "p"]}}, "non_zero": [{"expression": "f1p + 2*npv - 2", "symbols": ["f1p", "npv"]}], "non_negative": []}]}, {"scores": [{"descriptor": {"name": "balanced_accuracy", "abbreviation": "bacc", "lower_bound": 0, "upper_bound": 1, "short_args": ["tpr", "tnr"], "short_formula": "(tpr + tnr)/2", "args": ["tp", "tn", "p", "n"], "formula": "tp/(2*p) + tn/(2*n)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "tp/(2*p) + tn/(2*n)"}, "expression": "1/2*tn/n + 1/2*tp/p", "equation": "bacc - 1/2*tn/n - 1/2*tp/p", "equation_polynomial": "2*bacc*n*p - p*tn - n*tp", "function": "balanced_accuracy_standardized"}, {"descriptor": {"name": "f1_plus", "abbreviation": "f1p", "lower_bound": 0, "upper_bound": null, "args": ["tp", "fp", "p"], "formula": "(2*tp) / (tp + p + fp)", "args_standardized": ["tp", "tn", "p", "n"], "formula_standardized": "(2*tp) / (tp + p + n - tn)", "synonyms": ["f1"]}, "expression": "2*tp/(n + p - tn + tp)", "equation": "f1p - 2*tp/(n + p - tn + tp)", "equation_polynomial": "f1p*n + f1p*p - f1p*tn + f1p*tp - 2*tp", "function": "f1_plus_standardized"}], "solutions": [{"solution": {"expressions": {"tp": "(2*bacc*n - n - p)*f1p*p/(f1p*n + f1p*p - 2*p)", "tn": "(2*bacc*f1p*p + f1p*n - 4*bacc*p + f1p*p)*n/(f1p*n + f1p*p - 2*p)"}, "symbols": {"tp": ["bacc", "f1p", "n", "p"], "tn": ["bacc", "f1p", "n", "p"]}}, "non_zero": [{"expression": "f1p*n + f1p*p - 2*p", "symbols": ["f1p", "n", "p"]}], "non_negative": []}]}]}